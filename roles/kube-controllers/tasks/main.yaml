- name:
  file:
    path: '{{item}}'
    state: directory
  with_items:
    /etc/k8s/cert/ca
    /opt/bin

- name: copy ca certificate
  copy:
    src: '{{playbook_dir}}/target/cert/ca/cert.pem'
    dest: /etc/k8s/cert/ca/cert.pem

- name: generate kubernetes cert
  include_role:
    name: gen-cert
  vars:
    cert_dir: '/etc/k8s/cert/k8s'
    common_name: 'k8s'

- name: 
  block:
    - name: 'generate kube config for {{item}}'
      include_role:
        name: kubeconfig
        vars:
          client_name: '{{item}}'            

    - name: download kube-apiserver binary distribution
      get_url:
        url: 'https://storage.googleapis.com/kubernetes-release/release/v1.15.3/bin/linux/amd64/{{item}}'
        dest: /opt/bin
        mode: ugo+x

    - name: create etcd systemd service
      template: 
        src:  '{{role_path}}/templates/{{item}}.service.j2'
        dest: '/etc/systemd/system/{{item}}.service'
        mode: 644

    - name: enable systemd service
      systemd:
        daemon_reload: yes
        name: '{{item}}'
        enabled: yes
        state: restarted
        masked: no

  with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler

- name: 'generate kube config for {{item}}'
  include_role:
    name: kubeconfig
    vars:
      client_name: admin