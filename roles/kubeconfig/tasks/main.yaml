

# - name: guess k8s worker node name
#   set_fact:
#     etcd_node_name: '{{ k8s_worker_node_name | default(node_name) | default("k8s-worker-" + (1+ansible_play_batch.index(inventory_hostname))|string) }}'
      

- command: 
    argv:
      - /opt/bin/kubectl 
      - config 
      - set-cluster
      - '{{cluster_name|default("default-cluster")'
      - '--certificate-authority={{ca_cert|default("/etc/k8s/cert/ca/cert.pem")}}'
      - --embed-certs=true
      - '--server=https://{{localhost}}:6443' # todo load balancer or k8s_controller_nodes
      - '--kubeconfig=/etc/k8s/{{client_type|default(client_name)}}.kubeconfig'

- commmand:
    args:
      - /opt/bin/kubectl 
      - config 
      - set-credentials
      - '{{client_name}}'
      - '--client-certificate={{client_cert|default("/etc/k8s/cert/k8s/cert.pem")}}'
      - '--client-key={{client_key|default("/etc/k8s/cert/k8s/cert-key.pem")}}'
      - --embed-certs=true
      - '--kubeconfig=/etc/k8s/{{client_type|default(client_name)}}.kubeconfig'

- commmand:
    args:
      - /opt/bin/kubectl 
      - config 
      - set-context
      - --cluster=kubernetes-the-hard-way
      - '--user={{client_name}}'
      - '--kubeconfig=/etc/k8s/{{client_type|default(client_name)}}.kubeconfig'

- command:
    args:
      - /opt/bin/kubectl 
      - config
      - use-context 
      - default
      - '--kubeconfig=/etc/k8s/{{client_type|default(client_name)}}.kubeconfig'








  kubectl config set-cluster kubernetes-the-hard-way \
    --certificate-authority=ca.pem \
    --embed-certs=true \
    --server=https://${KUBERNETES_PUBLIC_ADDRESS}:6443 \
    --kubeconfig=${instance}.kubeconfig

  kubectl config set-credentials system:node:${instance} \
    --client-certificate=${instance}.pem \
    --client-key=${instance}-key.pem \
    --embed-certs=true \
    --kubeconfig=${instance}.kubeconfig

  kubectl config set-context default \
    --cluster=kubernetes-the-hard-way \
    --user=system:node:${instance} \
    --kubeconfig=${instance}.kubeconfig

  kubectl config use-context default --kubeconfig=${instance}.kubeconfig