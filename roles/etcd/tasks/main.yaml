- name: install etcd
  become: yes
  block:

    - name: download etcd binaries
      block:
        - file: 
            path:  '/tmp/download-etcd'
            state: 'directory'
            recurse: yes
        - unarchive:
            src: 'https://github.com/etcd-io/etcd/releases/download/v3.4.10/etcd-v3.4.10-linux-amd64.tar.gz'
            remote_src: yes
            dest: /tmp/download-etcd
            creates: /tmp/download-etcd/etcd-v3.4.10-linux-amd64
        - copy:
            src: '/tmp/download-etcd/etcd-v3.4.10-linux-amd64/{{item}}'
            remote_src: yes
            dest: /usr/local/bin
            mode: ugo+x
          with_items:
            - etcd
            - etcdctl

    - name: install etcctl wrapper with predefined options
      template:
        src: '{{role_path}}/templates/etcdctlwrap'
        dest: /usr/local/bin/etcdctlwrap
        mode: ugo+x

    - name: ensure directories exist
      file: 
        path: '{{item}}'
        state: directory
        recurse: yes
      with_items:
        - /var/lib/etcd
        - /etc/etcd/cert/ca

    - name: copy ca
      copy:
        src: '{{playbook_dir}}/target/cert/ca/cert.pem'
        dest: /etc/etcd/cert/ca

    - name: generate certs
      include_role:
        name: gen-cert
      vars:
        cert_dir: '/etc/etcd/cert/{{cert_bearer}}'
        common_name: 'etcd-{{cert_bearer}}'
      loop: ['server', 'peer', 'client']
      loop_control: {loop_var: cert_bearer}

    - set_fact:
        etcd_host_list: '{{lookup("inventory_hostnames", etcd_hosts, wantlist=true) if (etcd_hosts is defined) else ansible_play_hosts_all}}'

    - name: create etcd config file
      template: 
        src:  '{{role_path}}/templates/config.yaml.j2'
        dest: '/etc/etcd/config.yaml'
        mode: 644

    - name: create etcdctl env file
      template: 
        src:  '{{role_path}}/templates/ctlenv.sh.j2'
        dest: '/etc/etcd/ctlenv.sh'

    - name: 'set default etcdctl environment'
      lineinfile:
          path: /etc/profile
          line: . /etc/etcd/ctlenv.sh

    - name: create etcd systemd service
      template: 
        src:  '{{role_path}}/templates/etcd.service.j2'
        dest: '/etc/systemd/system/etcd.service'

    - name: enable systemd service
      systemd:
        daemon_reload: yes
        name: etcd
        enabled: yes
        state: restarted
        masked: no
